[workspace]
members = ["crates/*"]
default-members = ["crates/admin-api"]
resolver = "2"

[workspace.package]
version = "0.0.0"
edition = "2021"
license = "MulanPSL2"
authors = ["Mikey Huang <huangkun0222@gmail.com>"]
rust-version = "1.80"
readme = "README.md"
repository = "https://github.com/kun1988/bubo"
homepage = "https://github.com/kun1988/bubo"
description = "Bubo bubo"

[profile.dev]
debug = 1

[profile.dev.package]
# These speed up local tests.
# rowan.opt-level = 3
rustc-hash.opt-level = 3
# smol_str.opt-level = 3
# text-size.opt-level = 3
# This speeds up `cargo xtask dist`.
miniz_oxide.opt-level = 3
# salsa.opt-level = 3

[profile.release]
incremental = true
# Set this to 1 or 2 to get more useful backtraces in debugger.
debug = 0

[profile.dev-rel]
inherits = "release"
debug = 2

[workspace.dependencies]
admin-migration = { path = "crates/admin-migration" }
bubo = { path = "crates/bubo"}
tokio = { version = "1", features = ["full"] }
dotenvy = "0"
thiserror = "1"
anyhow = "1"
pretty_assertions = "1"
tokio-test = "*"
async-std = { version = "1", features = ["attributes", "tokio1"] }
# -- Tracing
tracing = "0"
tracing-subscriber = { version = "0", features = ["env-filter", "time"] }
tracing-appender = "0"
# -- Json
serde = { version = "1", features = ["derive"] }
serde_json = "1"
serde_with = {version = "3", features = ["time_0_3"]}
serde_repr = "0"
# -- Web
validator = { version = "0", features = ["derive"] }
jsonwebtoken = "9"
axum = { version = "0", features = ["macros", "tracing", "http2", "json"] }
axum-extra = { version = "0", features = ["typed-header", "typed-routing", "query", "json-deserializer"] }
tokio-rustls = "0"
rustls-pemfile = "2"
hyper = { version = "1", features = ["full"] }
hyper-util = { version = "0" }
tower = { version = "0", features = ["util", "retry", "timeout", "filter", "load-shed", "limit"] }
tower-http = { version = "0", features = ["fs", "cors", "limit", "compression-full", "trace", "add-extension",
"auth", "map-request-body", "map-response-body", "request-id", "util"] }
http-body-util = { version = "0.1" }
bytes = { version = "1"}
reqwest = { version = "0", features = ["blocking", "json", "rustls-tls", "cookies"] }
sea-orm = { version = "1", features = [ "sqlx-postgres", "runtime-tokio-rustls", "macros", "debug-print",
    "with-time", "with-json", "with-rust_decimal", "sqlx-sqlite", "sea-query-binder" ] }
sea-orm-migration ={ version = "1", features = ["runtime-tokio-rustls", "sqlx-postgres", "with-time", "with-json", "with-rust_decimal", "with-uuid"]}
sea-query = "0"
sqlx = "0"
metrics = { version = "0" }
metrics-exporter-prometheus = { version = "0" }
fred = {version = "9", features = ["serde-json", "enable-rustls"]}
# -- Crypt & Encoding
rand = "0"
hmac = "0"
sha2 = "0"
base64 = "0"
hex = "0"
argon2 = { version = "0", features = ["std", "password-hash"] }
# -- Others
lazy-regex = "3"
uuid = {version = "1", features = ["v4", "fast-rng"]}
time = { version = "0", features = ["macros", "local-offset", "serde-well-known", "serde", "formatting", "parsing"] }
async-trait = "0"
strum = "0"
strum_macros = "0"
radix_fmt = "1"
num_enum = "0"
once_cell = "1.18.0"
itoa = "1"
crossbeam = "0.8"


[workspace.lints.rust]
# remember to update RUSTFLAGS in ci.yml if you add something here

elided_lifetimes_in_paths = "allow"
explicit_outlives_requirements = "warn"
unsafe_op_in_unsafe_fn = "warn"
unused_extern_crates = "warn"
unused_lifetimes = "warn"
unreachable_pub = "warn"

[workspace.lints.clippy]
# FIXME Remove the tidy test once the lint table is stable

## lint groups
complexity = { level = "warn", priority = -1 }
correctness = { level = "deny", priority = -1 }
perf = { level = "deny", priority = -1 }
restriction = { level = "allow", priority = -1 }
style = { level = "warn", priority = -1 }
suspicious = { level = "warn", priority = -1 }

## allow following lints
# () makes a fine error in most cases
result_unit_err = "allow"
# We don't expose public APIs that matter like this
len_without_is_empty = "allow"
# We have macros that rely on this currently
enum_variant_names = "allow"
# Builder pattern disagrees
new_ret_no_self = "allow"
# Has a bunch of false positives
useless_asref = "allow"
# Has false positives
assigning_clones = "allow"

## Following lints should be tackled at some point
too_many_arguments = "allow"
type_complexity = "allow"
wrong_self_convention = "allow"

## warn at following lints
# CI raises these to deny
dbg_macro = "warn"
todo = "warn"
print_stdout = "warn"
print_stderr = "warn"

rc_buffer = "warn"
str_to_string = "warn"